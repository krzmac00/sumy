{"created": 1750140988.8824608, "duration": 129.65349006652832, "exitcode": 0, "root": "/mnt/c/repos/sumy", "environment": {}, "summary": {"passed": 73, "skipped": 1, "total": 74, "collected": 74}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "accounts/management/commands", "outcome": "passed", "result": []}, {"nodeid": "accounts/management", "outcome": "passed", "result": [{"nodeid": "accounts/management/commands", "type": "Package"}]}, {"nodeid": "accounts/migrations", "outcome": "passed", "result": []}, {"nodeid": "accounts/templates/accounts/email", "outcome": "passed", "result": []}, {"nodeid": "accounts/templates/accounts", "outcome": "passed", "result": [{"nodeid": "accounts/templates/accounts/email", "type": "Dir"}]}, {"nodeid": "accounts/templates", "outcome": "passed", "result": [{"nodeid": "accounts/templates/accounts", "type": "Dir"}]}, {"nodeid": "accounts", "outcome": "passed", "result": [{"nodeid": "accounts/management", "type": "Package"}, {"nodeid": "accounts/migrations", "type": "Package"}, {"nodeid": "accounts/templates", "type": "Dir"}]}, {"nodeid": "analytics/management/commands", "outcome": "passed", "result": []}, {"nodeid": "analytics/management", "outcome": "passed", "result": [{"nodeid": "analytics/management/commands", "type": "Package"}]}, {"nodeid": "analytics/migrations", "outcome": "passed", "result": []}, {"nodeid": "analytics", "outcome": "passed", "result": [{"nodeid": "analytics/management", "type": "Package"}, {"nodeid": "analytics/migrations", "type": "Package"}]}, {"nodeid": "front-end/public/data", "outcome": "passed", "result": []}, {"nodeid": "front-end/public/images/v1", "outcome": "passed", "result": []}, {"nodeid": "front-end/public/images", "outcome": "passed", "result": [{"nodeid": "front-end/public/images/v1", "type": "Dir"}]}, {"nodeid": "front-end/public", "outcome": "passed", "result": [{"nodeid": "front-end/public/data", "type": "Dir"}, {"nodeid": "front-end/public/images", "type": "Dir"}]}, {"nodeid": "front-end/src/assets", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/DayView", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/NewsFeed", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/PinnedThreads", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/ProfilePictureUpload", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/TabbedLayout", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/TodayEvents", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/floors", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/forum", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/news", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components/noticeboard", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/components", "outcome": "passed", "result": [{"nodeid": "front-end/src/components/DayView", "type": "Dir"}, {"nodeid": "front-end/src/components/NewsFeed", "type": "Dir"}, {"nodeid": "front-end/src/components/PinnedThreads", "type": "Dir"}, {"nodeid": "front-end/src/components/ProfilePictureUpload", "type": "Dir"}, {"nodeid": "front-end/src/components/TabbedLayout", "type": "Dir"}, {"nodeid": "front-end/src/components/TodayEvents", "type": "Dir"}, {"nodeid": "front-end/src/components/floors", "type": "Dir"}, {"nodeid": "front-end/src/components/forum", "type": "Dir"}, {"nodeid": "front-end/src/components/news", "type": "Dir"}, {"nodeid": "front-end/src/components/noticeboard", "type": "Dir"}]}, {"nodeid": "front-end/src/contexts", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/enums", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/hooks", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/layouts", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/pages/forum", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/pages/news", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/pages/noticeboard", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/pages", "outcome": "passed", "result": [{"nodeid": "front-end/src/pages/forum", "type": "Dir"}, {"nodeid": "front-end/src/pages/news", "type": "Dir"}, {"nodeid": "front-end/src/pages/noticeboard", "type": "Dir"}]}, {"nodeid": "front-end/src/services", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/types", "outcome": "passed", "result": []}, {"nodeid": "front-end/src/utils", "outcome": "passed", "result": []}, {"nodeid": "front-end/src", "outcome": "passed", "result": [{"nodeid": "front-end/src/assets", "type": "Dir"}, {"nodeid": "front-end/src/components", "type": "Dir"}, {"nodeid": "front-end/src/contexts", "type": "Dir"}, {"nodeid": "front-end/src/enums", "type": "Dir"}, {"nodeid": "front-end/src/hooks", "type": "Dir"}, {"nodeid": "front-end/src/layouts", "type": "Dir"}, {"nodeid": "front-end/src/pages", "type": "Dir"}, {"nodeid": "front-end/src/services", "type": "Dir"}, {"nodeid": "front-end/src/types", "type": "Dir"}, {"nodeid": "front-end/src/utils", "type": "Dir"}]}, {"nodeid": "front-end", "outcome": "passed", "result": [{"nodeid": "front-end/public", "type": "Dir"}, {"nodeid": "front-end/src", "type": "Dir"}]}, {"nodeid": "mainapp/api", "outcome": "passed", "result": []}, {"nodeid": "mainapp/management/commands", "outcome": "passed", "result": []}, {"nodeid": "mainapp/management", "outcome": "passed", "result": [{"nodeid": "mainapp/management/commands", "type": "Package"}]}, {"nodeid": "mainapp/migrations", "outcome": "passed", "result": []}, {"nodeid": "mainapp/script", "outcome": "passed", "result": []}, {"nodeid": "mainapp/templates/plans", "outcome": "passed", "result": []}, {"nodeid": "mainapp/templates", "outcome": "passed", "result": [{"nodeid": "mainapp/templates/plans", "type": "Dir"}]}, {"nodeid": "mainapp", "outcome": "passed", "result": [{"nodeid": "mainapp/api", "type": "Dir"}, {"nodeid": "mainapp/management", "type": "Package"}, {"nodeid": "mainapp/migrations", "type": "Package"}, {"nodeid": "mainapp/script", "type": "Dir"}, {"nodeid": "mainapp/templates", "type": "Dir"}]}, {"nodeid": "map/fixtures", "outcome": "passed", "result": []}, {"nodeid": "map/migrations", "outcome": "passed", "result": []}, {"nodeid": "map", "outcome": "passed", "result": [{"nodeid": "map/fixtures", "type": "Dir"}, {"nodeid": "map/migrations", "type": "Package"}]}, {"nodeid": "media/profile_pictures/1/thumbnails", "outcome": "passed", "result": []}, {"nodeid": "media/profile_pictures/1", "outcome": "passed", "result": [{"nodeid": "media/profile_pictures/1/thumbnails", "type": "Dir"}]}, {"nodeid": "media/profile_pictures/7/thumbnails", "outcome": "passed", "result": []}, {"nodeid": "media/profile_pictures/7", "outcome": "passed", "result": [{"nodeid": "media/profile_pictures/7/thumbnails", "type": "Dir"}]}, {"nodeid": "media/profile_pictures", "outcome": "passed", "result": [{"nodeid": "media/profile_pictures/1", "type": "Dir"}, {"nodeid": "media/profile_pictures/7", "type": "Dir"}]}, {"nodeid": "media", "outcome": "passed", "result": [{"nodeid": "media/profile_pictures", "type": "Dir"}]}, {"nodeid": "news/management/commands", "outcome": "passed", "result": []}, {"nodeid": "news/management", "outcome": "passed", "result": [{"nodeid": "news/management/commands", "type": "Package"}]}, {"nodeid": "news/migrations", "outcome": "passed", "result": []}, {"nodeid": "news", "outcome": "passed", "result": [{"nodeid": "news/management", "type": "Package"}, {"nodeid": "news/migrations", "type": "Package"}]}, {"nodeid": "noticeboard/migrations", "outcome": "passed", "result": []}, {"nodeid": "noticeboard", "outcome": "passed", "result": [{"nodeid": "noticeboard/migrations", "type": "Package"}]}, {"nodeid": "reports/coverage", "outcome": "passed", "result": []}, {"nodeid": "reports", "outcome": "passed", "result": [{"nodeid": "reports/coverage", "type": "Dir"}]}, {"nodeid": "sumy", "outcome": "passed", "result": []}, {"nodeid": "tests/accounts/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/accounts/integration", "outcome": "passed", "result": []}, {"nodeid": "tests/accounts/unit/test_models.py::BaseTestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_create_lecturer_user", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_create_user_with_email", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_email_uniqueness", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_superuser_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_blacklist_field", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_full_name", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_role_field", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_str_representation", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_user_without_email", "type": "Function", "lineno": 175}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_user_normalizes_email", "type": "Function", "lineno": 180}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_superuser_flags", "type": "Function", "lineno": 188}]}, {"nodeid": "tests/accounts/unit/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_models.py::BaseTestCase", "type": "UnitTestCase"}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel", "type": "UnitTestCase"}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager", "type": "Class"}]}, {"nodeid": "tests/accounts/unit/test_views.py::BaseAPITestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_inactive_user", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_invalid_credentials", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_success", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_logout", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_duplicate_email", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_invalid_email_format", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_password_mismatch", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_token_refresh", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_user_registration_success", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_me_endpoint", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_authenticated", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_by_name", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_unauthenticated", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/accounts/unit/test_views.py", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_views.py::BaseAPITestCase", "type": "UnitTestCase"}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews", "type": "UnitTestCase"}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews", "type": "UnitTestCase"}]}, {"nodeid": "tests/accounts/unit", "outcome": "passed", "result": [{"nodeid": "tests/accounts/unit/test_models.py", "type": "Module"}, {"nodeid": "tests/accounts/unit/test_views.py", "type": "Module"}]}, {"nodeid": "tests/accounts", "outcome": "passed", "result": [{"nodeid": "tests/accounts/fixtures", "type": "Package"}, {"nodeid": "tests/accounts/integration", "type": "Package"}, {"nodeid": "tests/accounts/unit", "type": "Package"}]}, {"nodeid": "tests/mainapp/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::BaseAPITestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_anonymous_posting_workflow", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_blacklist_functionality", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_complete_thread_lifecycle", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_thread_filtering_and_search", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_user_interaction_flow", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance::test_thread_list_performance", "type": "Function", "lineno": 414}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance::test_thread_filtering_performance", "type": "Function", "lineno": 433}]}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/integration/test_forum_flow.py::BaseAPITestCase", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance", "type": "Class"}]}, {"nodeid": "tests/mainapp/integration", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/integration/test_forum_flow.py", "type": "Module"}]}, {"nodeid": "tests/mainapp/unit/test_models.py::BaseTestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_anonymous_thread", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_category_choices", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_last_activity", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_post_count_update", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_str_representation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_vote_count_update", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_anonymous_post", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_ordering", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_str_representation", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_is_ongoing", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_is_upcoming", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_str_representation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_time_validation", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_change", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_str_representation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_uniqueness", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/mainapp/unit/test_models.py", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py::BaseTestCase", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel", "type": "UnitTestCase"}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel", "type": "UnitTestCase"}]}, {"nodeid": "tests/mainapp/unit", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/unit/test_models.py", "type": "Module"}]}, {"nodeid": "tests/mainapp", "outcome": "passed", "result": [{"nodeid": "tests/mainapp/fixtures", "type": "Package"}, {"nodeid": "tests/mainapp/integration", "type": "Package"}, {"nodeid": "tests/mainapp/unit", "type": "Package"}]}, {"nodeid": "tests/map/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/map/integration", "outcome": "passed", "result": []}, {"nodeid": "tests/map/unit", "outcome": "passed", "result": []}, {"nodeid": "tests/map", "outcome": "passed", "result": [{"nodeid": "tests/map/fixtures", "type": "Package"}, {"nodeid": "tests/map/integration", "type": "Package"}, {"nodeid": "tests/map/unit", "type": "Package"}]}, {"nodeid": "tests/news/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/news/integration", "outcome": "passed", "result": []}, {"nodeid": "tests/news/unit", "outcome": "passed", "result": []}, {"nodeid": "tests/news", "outcome": "passed", "result": [{"nodeid": "tests/news/fixtures", "type": "Package"}, {"nodeid": "tests/news/integration", "type": "Package"}, {"nodeid": "tests/news/unit", "type": "Package"}]}, {"nodeid": "tests/noticeboard/fixtures", "outcome": "passed", "result": []}, {"nodeid": "tests/noticeboard/integration", "outcome": "passed", "result": []}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::BaseTestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_category_validation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_expiry", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_last_activity_update", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_ordering", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_price_validation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_str_representation", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_creation", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_edit_flag", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_ordering", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_privacy", "type": "TestCaseFunction", "lineno": 29}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_str_representation", "type": "TestCaseFunction", "lineno": 29}]}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_active_advertisements_filter", "type": "Function", "lineno": 264}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_category_filter", "type": "Function", "lineno": 275}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_search_functionality", "type": "Function", "lineno": 287}]}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::BaseTestCase", "type": "UnitTestCase"}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel", "type": "UnitTestCase"}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel", "type": "UnitTestCase"}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet", "type": "Class"}]}, {"nodeid": "tests/noticeboard/unit", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/unit/test_advertisement_models.py", "type": "Module"}]}, {"nodeid": "tests/noticeboard", "outcome": "passed", "result": [{"nodeid": "tests/noticeboard/fixtures", "type": "Package"}, {"nodeid": "tests/noticeboard/integration", "type": "Package"}, {"nodeid": "tests/noticeboard/unit", "type": "Package"}]}, {"nodeid": "tests/test_minimal.py", "outcome": "passed", "result": [{"nodeid": "tests/test_minimal.py::test_user_creation", "type": "Function", "lineno": 9}, {"nodeid": "tests/test_minimal.py::test_lecturer_creation", "type": "Function", "lineno": 24}, {"nodeid": "tests/test_minimal.py::test_thread_creation", "type": "Function", "lineno": 40}]}, {"nodeid": "tests/test_runner.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_setup.py::BaseTestCase", "outcome": "passed", "result": []}, {"nodeid": "tests/test_setup.py::TestSetupVerification", "outcome": "passed", "result": [{"nodeid": "tests/test_setup.py::TestSetupVerification::test_authentication", "type": "TestCaseFunction", "lineno": 32}, {"nodeid": "tests/test_setup.py::TestSetupVerification::test_database_connection", "type": "TestCaseFunction", "lineno": 21}, {"nodeid": "tests/test_setup.py::TestSetupVerification::test_factory_creation", "type": "TestCaseFunction", "lineno": 26}]}, {"nodeid": "tests/test_setup.py", "outcome": "passed", "result": [{"nodeid": "tests/test_setup.py::BaseTestCase", "type": "UnitTestCase"}, {"nodeid": "tests/test_setup.py::TestSetupVerification", "type": "UnitTestCase"}, {"nodeid": "tests/test_setup.py::test_pytest_works", "type": "Function", "lineno": 42}, {"nodeid": "tests/test_setup.py::test_imports", "type": "Function", "lineno": 52}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/accounts", "type": "Package"}, {"nodeid": "tests/mainapp", "type": "Package"}, {"nodeid": "tests/map", "type": "Package"}, {"nodeid": "tests/news", "type": "Package"}, {"nodeid": "tests/noticeboard", "type": "Package"}, {"nodeid": "tests/test_minimal.py", "type": "Module"}, {"nodeid": "tests/test_runner.py", "type": "Module"}, {"nodeid": "tests/test_setup.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "accounts", "type": "Package"}, {"nodeid": "analytics", "type": "Package"}, {"nodeid": "front-end", "type": "Dir"}, {"nodeid": "mainapp", "type": "Package"}, {"nodeid": "map", "type": "Package"}, {"nodeid": "media", "type": "Dir"}, {"nodeid": "news", "type": "Package"}, {"nodeid": "noticeboard", "type": "Package"}, {"nodeid": "reports", "type": "Dir"}, {"nodeid": "sumy", "type": "Package"}, {"nodeid": "tests", "type": "Package"}]}], "tests": [{"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_create_lecturer_user", "lineno": 29, "outcome": "passed", "keywords": ["test_create_lecturer_user", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 3.4438659040024504, "outcome": "passed"}, "call": {"duration": 0.4748066430038307, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_create_lecturer_user\n============================================================\n  Test creating a lecturer user\n  \n  Verifies:\n  - Lecturer email format is accepted\n  - is_staff flag is properly set\n============================================================\n\n"}, "teardown": {"duration": 0.003315011999802664, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_create_user_with_email", "lineno": 29, "outcome": "passed", "keywords": ["test_create_user_with_email", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008973879739642143, "outcome": "passed"}, "call": {"duration": 0.4663118149910588, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_create_user_with_email\n============================================================\n  Test creating a user with email authentication\n  \n  Verifies:\n  - User can be created with valid university email\n  - Password is properly hashed\n  - User is inactive by default (needs activation)\n  - Username is derived from email\n============================================================\n\n"}, "teardown": {"duration": 0.0003642959927674383, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_email_uniqueness", "lineno": 29, "outcome": "passed", "keywords": ["test_email_uniqueness", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.001503623992903158, "outcome": "passed"}, "call": {"duration": 0.46401648299070075, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_email_uniqueness\n============================================================\n  Test email uniqueness constraint\n  \n  Verifies:\n  - Cannot create two users with same email\n  - Proper error is raised\n============================================================\n\n"}, "teardown": {"duration": 0.0003152840072289109, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_superuser_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_superuser_creation", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.00086556700989604, "outcome": "passed"}, "call": {"duration": 0.31178568900213577, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_superuser_creation\n============================================================\n  Test superuser creation\n  \n  Verifies:\n  - Superuser has all permissions\n  - is_staff and is_superuser are True\n============================================================\n\n"}, "teardown": {"duration": 0.0002858520019799471, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_blacklist_field", "lineno": 29, "outcome": "passed", "keywords": ["test_user_blacklist_field", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.000828615011414513, "outcome": "passed"}, "call": {"duration": 3.0878196350240614, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_blacklist_field\n============================================================\n  Test user blacklist functionality\n  \n  Verifies:\n  - Blacklist is empty by default\n  - Can add users to blacklist\n============================================================\n\n"}, "teardown": {"duration": 0.00030783400870859623, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_full_name", "lineno": 29, "outcome": "passed", "keywords": ["test_user_full_name", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008524389995727688, "outcome": "passed"}, "call": {"duration": 0.3152182360063307, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_full_name\n============================================================\n  Test user full name property\n  \n  Verifies:\n  - Full name is properly formatted\n  - Handles missing first or last name\n============================================================\n\n"}, "teardown": {"duration": 0.00030100400908850133, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_role_field", "lineno": 29, "outcome": "passed", "keywords": ["test_user_role_field", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008696900040376931, "outcome": "passed"}, "call": {"duration": 0.6309107580163982, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_role_field\n============================================================\n  Test user role field functionality\n  \n  Verifies:\n  - Students have student role\n  - Lecturers have lecturer role\n  - Admin users have admin role\n============================================================\n\n"}, "teardown": {"duration": 0.0005857569922227412, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserModel::test_user_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_user_str_representation", "TestUserModel", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0013013790012337267, "outcome": "passed"}, "call": {"duration": 0.3319203979917802, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_str_representation\n============================================================\n  Test user string representation\n  \n  Verifies:\n  - __str__ returns email\n============================================================\n\n"}, "teardown": {"duration": 0.0017720409960020334, "outcome": "passed", "stdout": "\nTestUserModel completed in 6.11s\n"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_user_without_email", "lineno": 175, "outcome": "passed", "keywords": ["test_create_user_without_email", "TestUserManager", "django_db", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.008058937004534528, "outcome": "passed"}, "call": {"duration": 0.004127178981434554, "outcome": "passed"}, "teardown": {"duration": 0.0017427199927624315, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_user_normalizes_email", "lineno": 180, "outcome": "passed", "keywords": ["test_create_user_normalizes_email", "TestUserManager", "django_db", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.00132636001217179, "outcome": "passed"}, "call": {"duration": 0.1596153839782346, "outcome": "passed"}, "teardown": {"duration": 0.0024472219811286777, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_models.py::TestUserManager::test_create_superuser_flags", "lineno": 188, "outcome": "passed", "keywords": ["test_create_superuser_flags", "TestUserManager", "django_db", "test_models.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.001833893998991698, "outcome": "passed"}, "call": {"duration": 0.0007377529982477427, "outcome": "passed"}, "teardown": {"duration": 0.0018213709990959615, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_inactive_user", "lineno": 29, "outcome": "passed", "keywords": ["test_login_inactive_user", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0014281269977800548, "outcome": "passed"}, "call": {"duration": 1.8127109209890477, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_login_inactive_user\n============================================================\n  Test login with inactive user\n  \n  Verifies:\n  - Inactive users cannot login\n  - Proper error message is returned\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Unauthorized: /api/accounts/token/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140877.987982, "msecs": 987.0, "relativeCreated": 36256.27199, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 401, "request": "<WSGIRequest: POST '/api/accounts/token/'>"}]}, "teardown": {"duration": 0.00046026098425500095, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_invalid_credentials", "lineno": 29, "outcome": "passed", "keywords": ["test_login_invalid_credentials", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0011238009901717305, "outcome": "passed"}, "call": {"duration": 0.6220124829851557, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_login_invalid_credentials\n============================================================\n  Test login with invalid credentials\n  \n  Verifies:\n  - Invalid credentials are rejected\n  - Proper error message is returned\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Unauthorized: /api/accounts/token/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140878.6138322, "msecs": 613.0, "relativeCreated": 36882.12208, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 401, "request": "<WSGIRequest: POST '/api/accounts/token/'>"}]}, "teardown": {"duration": 0.00030362402321770787, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_login_success", "lineno": 29, "outcome": "passed", "keywords": ["test_login_success", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008575489919167012, "outcome": "passed"}, "call": {"duration": 0.7446637310204096, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_login_success\n============================================================\n  Test successful login\n  \n  Verifies:\n  - User can login with correct credentials\n  - JWT tokens are returned\n  - User data is included in response\n============================================================\n\n"}, "teardown": {"duration": 0.00029124299180693924, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_logout", "lineno": 29, "outcome": "passed", "keywords": ["test_logout", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008494990179315209, "outcome": "passed"}, "call": {"duration": 0.8113817060075235, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_logout\n============================================================\n  Test user logout\n  \n  Verifies:\n  - Authenticated user can logout\n  - Refresh token is blacklisted\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Unauthorized: /api/accounts/token/refresh/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140880.1738374, "msecs": 173.0, "relativeCreated": 38442.127222, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 401, "request": "<WSGIRequest: POST '/api/accounts/token/refresh/'>"}]}, "teardown": {"duration": 0.0003009619831573218, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_duplicate_email", "lineno": 29, "outcome": "passed", "keywords": ["test_registration_duplicate_email", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008346529793925583, "outcome": "passed"}, "call": {"duration": 0.32722837099572644, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_registration_duplicate_email\n============================================================\n  Test registration with existing email\n  \n  Verifies:\n  - Duplicate emails are rejected\n  - Proper error message is returned\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Bad Request: /api/accounts/register/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140880.5031905, "msecs": 503.0, "relativeCreated": 38771.480386, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 400, "request": "<WSGIRequest: POST '/api/accounts/register/'>"}]}, "teardown": {"duration": 0.0003326730220578611, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_invalid_email_format", "lineno": 29, "outcome": "passed", "keywords": ["test_registration_invalid_email_format", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008645839989185333, "outcome": "passed"}, "call": {"duration": 0.16555008498835377, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_registration_invalid_email_format\n============================================================\n  Test registration with invalid email format\n  \n  Verifies:\n  - Non-university emails are rejected\n  - Proper error message is returned\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Bad Request: /api/accounts/register/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140880.6712654, "msecs": 671.0, "relativeCreated": 38939.555097, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 400, "request": "<WSGIRequest: POST '/api/accounts/register/'>"}]}, "teardown": {"duration": 0.00029972201446071267, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_registration_password_mismatch", "lineno": 29, "outcome": "passed", "keywords": ["test_registration_password_mismatch", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008296330051962286, "outcome": "passed"}, "call": {"duration": 0.1700577349984087, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_registration_password_mismatch\n============================================================\n  Test registration with mismatched passwords\n  \n  Verifies:\n  - Password confirmation is enforced\n  - Proper error message is returned\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Bad Request: /api/accounts/register/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140880.8431294, "msecs": 843.0, "relativeCreated": 39111.419206, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 400, "request": "<WSGIRequest: POST '/api/accounts/register/'>"}]}, "teardown": {"duration": 0.0003008219937328249, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_token_refresh", "lineno": 29, "outcome": "passed", "keywords": ["test_token_refresh", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.00089923499035649, "outcome": "passed"}, "call": {"duration": 0.3293678420013748, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_token_refresh\n============================================================\n  Test JWT token refresh\n  \n  Verifies:\n  - Refresh token can be used to get new access token\n  - New access token is valid\n============================================================\n\n"}, "teardown": {"duration": 0.00028475100407376885, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestAuthenticationViews::test_user_registration_success", "lineno": 29, "outcome": "passed", "keywords": ["test_user_registration_success", "TestAuthenticationViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008138220000546426, "outcome": "passed"}, "call": {"duration": 0.68278632601141, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_registration_success\n============================================================\n  Test successful user registration\n  \n  Verifies:\n  - User can register with valid data\n  - Profile is created automatically\n  - Response contains user data and tokens\n============================================================\n\n"}, "teardown": {"duration": 0.001086923002731055, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_me_endpoint", "lineno": 29, "outcome": "passed", "keywords": ["test_me_endpoint", "TestUserViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.006554727995535359, "outcome": "passed"}, "call": {"duration": 0.16632741599460132, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_me_endpoint\n============================================================\n  Test viewing own user data\n  \n  Verifies:\n  - Users can view their own data via 'me' endpoint\n  - All relevant fields are included\n============================================================\n\n"}, "teardown": {"duration": 0.0002875810023397207, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_authenticated", "lineno": 29, "outcome": "passed", "keywords": ["test_user_search_authenticated", "TestUserViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008687539957463741, "outcome": "passed"}, "call": {"duration": 0.465176095982315, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_search_authenticated\n============================================================\n  Test user search for authenticated users\n  \n  Verifies:\n  - Authenticated users can search for users\n  - Search results match query\n  - User data is included\n============================================================\n\n"}, "teardown": {"duration": 0.0003314330242574215, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_by_name", "lineno": 29, "outcome": "passed", "keywords": ["test_user_search_by_name", "TestUserViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008558130066376179, "outcome": "passed"}, "call": {"duration": 0.6198441330052447, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_search_by_name\n============================================================\n  Test user search functionality\n  \n  Verifies:\n  - Can search users by name\n  - Search is case insensitive\n  - Returns matching results\n============================================================\n\n"}, "teardown": {"duration": 0.00030187200172804296, "outcome": "passed"}}, {"nodeid": "tests/accounts/unit/test_views.py::TestUserViews::test_user_search_unauthenticated", "lineno": 29, "outcome": "passed", "keywords": ["test_user_search_unauthenticated", "TestUserViews", "test_views.py", "unit", "accounts", "tests", "sumy", ""], "setup": {"duration": 0.0008367229893337935, "outcome": "passed"}, "call": {"duration": 0.16127303801476955, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_search_unauthenticated\n============================================================\n  Test user search requires authentication\n  \n  Verifies:\n  - Unauthenticated users cannot search users\n============================================================\n\n", "log": [{"name": "django.request", "msg": "Unauthorized: /api/accounts/users/search/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140883.286551, "msecs": 286.0, "relativeCreated": 41554.840749, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/accounts/users/search/'>"}]}, "teardown": {"duration": 0.0009960189927369356, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_anonymous_posting_workflow", "lineno": 29, "outcome": "passed", "keywords": ["test_anonymous_posting_workflow", "TestForumIntegrationFlow", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.02577210299205035, "outcome": "passed"}, "call": {"duration": 0.19920309400185943, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_anonymous_posting_workflow\n============================================================\n  Test anonymous posting workflow\n  \n  Verifies:\n  - Users can post anonymously\n  - Anonymous identity is maintained\n  - Real author is still tracked\n============================================================\n\nPost creation request data: {'thread': 2874, 'content': 'Anonymous reply to anonymous thread', 'is_anonymous': True, 'nickname': 'Helper'}\n"}, "teardown": {"duration": 0.0002984409802593291, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_blacklist_functionality", "lineno": 29, "outcome": "skipped", "keywords": ["test_blacklist_functionality", "skip", "pytestmark", "TestForumIntegrationFlow", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.003206516004865989, "outcome": "skipped", "longrepr": "('/mnt/c/repos/sumy/tests/conftest.py', 30, 'Skipped: Blacklist filtering not implemented in API')"}, "teardown": {"duration": 0.00022403898765332997, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_complete_thread_lifecycle", "lineno": 29, "outcome": "passed", "keywords": ["test_complete_thread_lifecycle", "TestForumIntegrationFlow", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0009825890010688454, "outcome": "passed"}, "call": {"duration": 0.4137342679896392, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_complete_thread_lifecycle\n============================================================\n  Test complete thread lifecycle from creation to deletion\n  \n  Flow:\n  1. Create thread\n  2. Add posts\n  3. Vote on thread\n  4. Edit thread\n  5. Delete thread\n============================================================\n\nPost creation request data: {'thread': 2875, 'content': 'This is a reply to the thread', 'is_anonymous': False}\nPost creation request data: {'thread': 2875, 'content': 'Another reply from different user', 'is_anonymous': True, 'nickname': 'Anonymous Student'}\n"}, "teardown": {"duration": 0.0002991420042235404, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_thread_filtering_and_search", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_filtering_and_search", "TestForumIntegrationFlow", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007972610183060169, "outcome": "passed"}, "call": {"duration": 4.70055395498639, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_filtering_and_search\n============================================================\n  Test thread filtering and search functionality\n  \n  Verifies:\n  - Category filtering works\n  - Date range filtering works\n  - Search functionality works\n  - Sorting options work\n============================================================\n\nThread 'Academic Thread 0' has 1 votes\nThread 'Lifestyle Thread 1' has 2 votes\nThread 'Events Thread 2' has 3 votes\n\nTop threads by votes:\n  0: 'Other Thread 4' - votes: 0\n  1: 'Technology Thread 3' - votes: 0\n  2: 'Events Thread 2' - votes: 3\n\nExpected order: ['Events Thread 2', 'Lifestyle Thread 1', 'Academic Thread 0']\nActual order: ['Events Thread 2', 'Lifestyle Thread 1', 'Academic Thread 0']\n"}, "teardown": {"duration": 0.00033611402614042163, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumIntegrationFlow::test_user_interaction_flow", "lineno": 29, "outcome": "passed", "keywords": ["test_user_interaction_flow", "TestForumIntegrationFlow", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0009016859985422343, "outcome": "passed"}, "call": {"duration": 0.5419081000145525, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_user_interaction_flow\n============================================================\n  Test complete user interaction flow\n  \n  Verifies:\n  - User can view threads\n  - User can participate in discussions\n  - User's activity is tracked\n  - Permissions are enforced\n============================================================\n\nPost creation request data: {'thread': 2881, 'content': 'My contribution to the discussion'}\n", "log": [{"name": "django.request", "msg": "Forbidden: /api/v1/threads/2881/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140889.1354342, "msecs": 135.0, "relativeCreated": 47403.72405, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 403, "request": "<WSGIRequest: PATCH '/api/v1/threads/2881/'>"}]}, "teardown": {"duration": 0.0009186069946736097, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance::test_thread_list_performance", "lineno": 414, "outcome": "passed", "keywords": ["test_thread_list_performance", "TestForumPerformance", "django_db", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.16249850500025786, "outcome": "passed"}, "call": {"duration": 54.79785902900039, "outcome": "passed", "stdout": "thread_creation: 54.574s\nthread_list: 0.219s\n"}, "teardown": {"duration": 0.007443529990268871, "outcome": "passed"}}, {"nodeid": "tests/mainapp/integration/test_forum_flow.py::TestForumPerformance::test_thread_filtering_performance", "lineno": 433, "outcome": "passed", "keywords": ["test_thread_filtering_performance", "TestForumPerformance", "django_db", "test_forum_flow.py", "integration", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.1524795129953418, "outcome": "passed"}, "call": {"duration": 15.30802677400061, "outcome": "passed", "stdout": "category_filter: 0.035s\n"}, "teardown": {"duration": 0.0027115859847981483, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_anonymous_thread", "lineno": 29, "outcome": "passed", "keywords": ["test_anonymous_thread", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.011354515998391435, "outcome": "passed"}, "call": {"duration": 0.157955912000034, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_anonymous_thread\n============================================================\n  Test anonymous thread functionality\n  \n  Verifies:\n  - Anonymous threads hide author identity\n  - Nickname is used for anonymous threads\n  - Author is still tracked in database\n============================================================\n\n"}, "teardown": {"duration": 0.00027578198933042586, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_category_choices", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_category_choices", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008678800077177584, "outcome": "passed"}, "call": {"duration": 1.057711996982107, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_category_choices\n============================================================\n  Test thread category validation\n  \n  Verifies:\n  - Valid categories are accepted\n  - Invalid categories raise error\n============================================================\n\n"}, "teardown": {"duration": 0.0002940130070783198, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_creation", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008401480154134333, "outcome": "passed"}, "call": {"duration": 0.16316289498354308, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_creation\n============================================================\n  Test basic thread creation\n  \n  Verifies:\n  - Thread can be created with required fields\n  - Default values are set correctly\n  - Timestamps are set automatically\n============================================================\n\n"}, "teardown": {"duration": 0.000308304006466642, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_last_activity", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_last_activity", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008026369905564934, "outcome": "passed"}, "call": {"duration": 0.41217294000671245, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_last_activity\n============================================================\n  Test thread last activity tracking\n  \n  Verifies:\n  - Last activity updates with new posts\n  - Uses thread creation time if no posts\n============================================================\n\n"}, "teardown": {"duration": 0.0003232849994674325, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_post_count_update", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_post_count_update", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007678050023969263, "outcome": "passed"}, "call": {"duration": 1.077488031995017, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_post_count_update\n============================================================\n  Test thread post count caching\n  \n  Verifies:\n  - Post count is cached correctly\n  - Cache updates when posts are added/removed\n============================================================\n\n"}, "teardown": {"duration": 0.00033997499849647284, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_str_representation", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008482580014970154, "outcome": "passed"}, "call": {"duration": 0.3040215559885837, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_str_representation\n============================================================\n  Test thread string representation\n  \n  Verifies:\n  - __str__ returns thread title\n============================================================\n\n"}, "teardown": {"duration": 0.0002749730192590505, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestThreadModel::test_thread_vote_count_update", "lineno": 29, "outcome": "passed", "keywords": ["test_thread_vote_count_update", "TestThreadModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007917459879536182, "outcome": "passed"}, "call": {"duration": 1.0853970389871392, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_thread_vote_count_update\n============================================================\n  Test thread vote count caching\n  \n  Verifies:\n  - Vote count is cached correctly\n  - Cache updates when votes change\n============================================================\n\n"}, "teardown": {"duration": 0.0009821449930313975, "outcome": "passed", "stdout": "\nTestThreadModel completed in 4.27s\n"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_anonymous_post", "lineno": 29, "outcome": "passed", "keywords": ["test_anonymous_post", "TestPostModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.00576254099723883, "outcome": "passed"}, "call": {"duration": 0.48273691299255006, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_anonymous_post\n============================================================\n  Test anonymous post functionality\n  \n  Verifies:\n  - Anonymous posts hide author identity\n  - Nickname is used for display\n============================================================\n\n"}, "teardown": {"duration": 0.0002878630184568465, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_post_creation", "TestPostModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008781999931670725, "outcome": "passed"}, "call": {"duration": 0.3160373199789319, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_post_creation\n============================================================\n  Test basic post creation\n  \n  Verifies:\n  - Post can be created with required fields\n  - Belongs to thread correctly\n  - Timestamps are set\n============================================================\n\n"}, "teardown": {"duration": 0.00029142299899831414, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_ordering", "lineno": 29, "outcome": "passed", "keywords": ["test_post_ordering", "TestPostModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008192780078388751, "outcome": "passed"}, "call": {"duration": 0.7757854410156142, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_post_ordering\n============================================================\n  Test posts are ordered by creation time\n  \n  Verifies:\n  - Default ordering is by created_at\n============================================================\n\n"}, "teardown": {"duration": 0.0003635960165411234, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestPostModel::test_post_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_post_str_representation", "TestPostModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008981010178104043, "outcome": "passed"}, "call": {"duration": 0.4671245360223111, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_post_str_representation\n============================================================\n  Test post string representation\n  \n  Verifies:\n  - __str__ shows truncated content\n============================================================\n\n"}, "teardown": {"duration": 0.0008578289998695254, "outcome": "passed", "stdout": "\nTestPostModel completed in 2.05s\n"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_event_creation", "TestEventModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.005311919987434521, "outcome": "passed"}, "call": {"duration": 0.15687299901037477, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_event_creation\n============================================================\n  Test basic event creation\n  \n  Verifies:\n  - Event can be created with required fields\n  - Time validation works\n  - Attendees relationship works\n============================================================\n\n"}, "teardown": {"duration": 0.00025970200658775866, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_is_ongoing", "lineno": 29, "outcome": "passed", "keywords": ["test_event_is_ongoing", "TestEventModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007589039742015302, "outcome": "passed"}, "call": {"duration": 0.4578865229850635, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_event_is_ongoing\n============================================================\n  Test event ongoing status\n  \n  Verifies:\n  - Correctly identifies ongoing events\n============================================================\n\n"}, "teardown": {"duration": 0.0002709820109885186, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_is_upcoming", "lineno": 29, "outcome": "passed", "keywords": ["test_event_is_upcoming", "TestEventModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0009242520027328283, "outcome": "passed"}, "call": {"duration": 0.4566317410208285, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_event_is_upcoming\n============================================================\n  Test event upcoming status\n  \n  Verifies:\n  - Correctly identifies upcoming events\n  - Correctly identifies past events\n============================================================\n\n"}, "teardown": {"duration": 0.00028787300107069314, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_event_str_representation", "TestEventModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008292680140584707, "outcome": "passed"}, "call": {"duration": 0.3149180489999708, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_event_str_representation\n============================================================\n  Test event string representation\n  \n  Verifies:\n  - __str__ returns event title with date\n============================================================\n\n"}, "teardown": {"duration": 0.0002988039923366159, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestEventModel::test_event_time_validation", "lineno": 29, "outcome": "passed", "keywords": ["test_event_time_validation", "TestEventModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007905960083007812, "outcome": "passed"}, "call": {"duration": 0.16247172199655324, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_event_time_validation\n============================================================\n  Test event time validation\n  \n  Verifies:\n  - End time must be after start time\n  - Cannot create events in the past\n============================================================\n\n"}, "teardown": {"duration": 0.0009440029971301556, "outcome": "passed", "stdout": "\nTestEventModel completed in 1.56s\n"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_change", "lineno": 29, "outcome": "passed", "keywords": ["test_vote_change", "TestVoteModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.005716137995477766, "outcome": "passed"}, "call": {"duration": 0.3402688099886291, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_vote_change\n============================================================\n  Test changing vote type\n  \n  Verifies:\n  - Users can change their vote\n  - Vote count updates correctly\n============================================================\n\n"}, "teardown": {"duration": 0.00028018199373036623, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_vote_creation", "TestVoteModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0007797750004101545, "outcome": "passed"}, "call": {"duration": 0.31741986999986693, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_vote_creation\n============================================================\n  Test vote creation\n  \n  Verifies:\n  - Votes can be created\n  - User can vote on threads\n  - Vote types work correctly\n============================================================\n\n"}, "teardown": {"duration": 0.0003320130053907633, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_vote_str_representation", "TestVoteModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0008737739990465343, "outcome": "passed"}, "call": {"duration": 0.3215402700006962, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_vote_str_representation\n============================================================\n  Test vote string representation\n  \n  Verifies:\n  - __str__ shows user, thread, and vote type\n============================================================\n\n"}, "teardown": {"duration": 0.00028413100517354906, "outcome": "passed"}}, {"nodeid": "tests/mainapp/unit/test_models.py::TestVoteModel::test_vote_uniqueness", "lineno": 29, "outcome": "passed", "keywords": ["test_vote_uniqueness", "TestVoteModel", "test_models.py", "unit", "mainapp", "tests", "sumy", ""], "setup": {"duration": 0.0009024750033859164, "outcome": "passed"}, "call": {"duration": 0.34152329599601217, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_vote_uniqueness\n============================================================\n  Test vote uniqueness constraint\n  \n  Verifies:\n  - User can only vote once per thread\n  - Duplicate votes are prevented\n============================================================\n\n"}, "teardown": {"duration": 0.0009477690036874264, "outcome": "passed", "stdout": "\nTestVoteModel completed in 1.33s\n"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_category_validation", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_category_validation", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.023845618008635938, "outcome": "passed"}, "call": {"duration": 1.2482979200140107, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_category_validation\n============================================================\n  Test advertisement category validation\n  \n  Verifies:\n  - Valid categories are accepted\n  - Invalid categories raise error\n============================================================\n\n"}, "teardown": {"duration": 0.00031938301981426775, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_creation", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0009447270131204277, "outcome": "passed"}, "call": {"duration": 0.1724168130022008, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_creation\n============================================================\n  Test basic advertisement creation\n  \n  Verifies:\n  - Advertisement can be created with required fields\n  - Default values are set correctly\n  - Timestamps are set automatically\n============================================================\n\n"}, "teardown": {"duration": 0.0003354330256115645, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_expiry", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_expiry", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0009324359998572618, "outcome": "passed"}, "call": {"duration": 0.4823375669948291, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_expiry\n============================================================\n  Test advertisement expiry functionality\n  \n  Verifies:\n  - Advertisements can have expiry dates\n  - Expired ads are marked as inactive\n  - Non-expired ads remain active\n============================================================\n\n"}, "teardown": {"duration": 0.00032247300259768963, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_last_activity_update", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_last_activity_update", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0009840679995249957, "outcome": "passed"}, "call": {"duration": 0.41970372598734684, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_last_activity_update\n============================================================\n  Test that comments update advertisement's last activity\n  \n  Verifies:\n  - Adding a comment updates last_activity_date\n============================================================\n\n"}, "teardown": {"duration": 0.00029868099954910576, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_ordering", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_ordering", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0008391129958909005, "outcome": "passed"}, "call": {"duration": 0.4796361039916519, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_ordering\n============================================================\n  Test advertisements are ordered by last activity date\n  \n  Verifies:\n  - Newer activity comes first\n============================================================\n\n"}, "teardown": {"duration": 0.0003620640200097114, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_price_validation", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_price_validation", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0010280199931003153, "outcome": "passed"}, "call": {"duration": 0.4802718889841344, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_price_validation\n============================================================\n  Test advertisement price field\n  \n  Verifies:\n  - Price can be null (for non-sale items)\n  - Price accepts decimal values\n============================================================\n\n"}, "teardown": {"duration": 0.0002991219807881862, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementModel::test_advertisement_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_advertisement_str_representation", "TestAdvertisementModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0008498030074406415, "outcome": "passed"}, "call": {"duration": 0.31252369499998167, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_advertisement_str_representation\n============================================================\n  Test advertisement string representation\n  \n  Verifies:\n  - __str__ returns advertisement title\n============================================================\n\n"}, "teardown": {"duration": 0.001006890001008287, "outcome": "passed", "stdout": "\nTestAdvertisementModel completed in 3.61s\n"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_creation", "lineno": 29, "outcome": "passed", "keywords": ["test_comment_creation", "TestCommentModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.005824627005495131, "outcome": "passed"}, "call": {"duration": 0.3174079149903264, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_comment_creation\n============================================================\n  Test basic comment creation\n  \n  Verifies:\n  - Comment can be created with required fields\n  - Default values are set correctly\n  - Related to advertisement correctly\n============================================================\n\n"}, "teardown": {"duration": 0.0003709550073835999, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_edit_flag", "lineno": 29, "outcome": "passed", "keywords": ["test_comment_edit_flag", "TestCommentModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0008309730037581176, "outcome": "passed"}, "call": {"duration": 0.4635001049900893, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_comment_edit_flag\n============================================================\n  Test comment edit tracking\n  \n  Verifies:\n  - was_edited flag can be set\n  - Useful for showing edit history\n============================================================\n\n"}, "teardown": {"duration": 0.00029520198586396873, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_ordering", "lineno": 29, "outcome": "passed", "keywords": ["test_comment_ordering", "TestCommentModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0007279280107468367, "outcome": "passed"}, "call": {"duration": 0.7975237430073321, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_comment_ordering\n============================================================\n  Test comments are ordered by creation date\n  \n  Verifies:\n  - Older comments come first\n============================================================\n\n"}, "teardown": {"duration": 0.0003171520074829459, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_privacy", "lineno": 29, "outcome": "passed", "keywords": ["test_comment_privacy", "TestCommentModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0010482310026418418, "outcome": "passed"}, "call": {"duration": 0.6199622739804909, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_comment_privacy\n============================================================\n  Test comment privacy settings\n  \n  Verifies:\n  - Comments can be public or private\n  - Default is private (False)\n============================================================\n\n"}, "teardown": {"duration": 0.0003118029853794724, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestCommentModel::test_comment_str_representation", "lineno": 29, "outcome": "passed", "keywords": ["test_comment_str_representation", "TestCommentModel", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0008628639916423708, "outcome": "passed"}, "call": {"duration": 0.31696293799905106, "outcome": "passed", "stdout": "\n============================================================\nTEST: test_comment_str_representation\n============================================================\n  Test comment string representation\n  \n  Verifies:\n  - __str__ shows author and advertisement\n============================================================\n\n"}, "teardown": {"duration": 0.000949267006944865, "outcome": "passed", "stdout": "\nTestCommentModel completed in 2.53s\n"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_active_advertisements_filter", "lineno": 264, "outcome": "passed", "keywords": ["test_active_advertisements_filter", "TestAdvertisementQuerySet", "django_db", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.005886516009923071, "outcome": "passed"}, "call": {"duration": 0.3110938979953062, "outcome": "passed"}, "teardown": {"duration": 0.001782859006198123, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_category_filter", "lineno": 275, "outcome": "passed", "keywords": ["test_category_filter", "TestAdvertisementQuerySet", "django_db", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0014597570116166025, "outcome": "passed"}, "call": {"duration": 0.4637560840055812, "outcome": "passed"}, "teardown": {"duration": 0.0013535829784814268, "outcome": "passed"}}, {"nodeid": "tests/noticeboard/unit/test_advertisement_models.py::TestAdvertisementQuerySet::test_search_functionality", "lineno": 287, "outcome": "passed", "keywords": ["test_search_functionality", "TestAdvertisementQuerySet", "django_db", "test_advertisement_models.py", "unit", "noticeboard", "tests", "sumy", ""], "setup": {"duration": 0.0011427739809732884, "outcome": "passed"}, "call": {"duration": 0.4523415289877448, "outcome": "passed"}, "teardown": {"duration": 0.0014317200111690909, "outcome": "passed"}}, {"nodeid": "tests/test_minimal.py::test_user_creation", "lineno": 9, "outcome": "passed", "keywords": ["test_user_creation", "django_db", "pytestmark", "test_minimal.py", "tests", "sumy", ""], "setup": {"duration": 0.0011142069997731596, "outcome": "passed"}, "call": {"duration": 0.1523692890186794, "outcome": "passed"}, "teardown": {"duration": 0.0012581829796545208, "outcome": "passed"}}, {"nodeid": "tests/test_minimal.py::test_lecturer_creation", "lineno": 24, "outcome": "passed", "keywords": ["test_lecturer_creation", "django_db", "pytestmark", "test_minimal.py", "tests", "sumy", ""], "setup": {"duration": 0.0011837299971375614, "outcome": "passed"}, "call": {"duration": 0.1481605120061431, "outcome": "passed"}, "teardown": {"duration": 0.001356135995592922, "outcome": "passed"}}, {"nodeid": "tests/test_minimal.py::test_thread_creation", "lineno": 40, "outcome": "passed", "keywords": ["test_thread_creation", "django_db", "pytestmark", "test_minimal.py", "tests", "sumy", ""], "setup": {"duration": 0.001148348004790023, "outcome": "passed"}, "call": {"duration": 0.15188901699730195, "outcome": "passed"}, "teardown": {"duration": 0.0016464500222355127, "outcome": "passed"}}, {"nodeid": "tests/test_setup.py::TestSetupVerification::test_authentication", "lineno": 32, "outcome": "passed", "keywords": ["test_authentication", "TestSetupVerification", "test_setup.py", "tests", "sumy", ""], "setup": {"duration": 0.0011387080012355, "outcome": "passed"}, "call": {"duration": 0.18380378899746574, "outcome": "passed", "log": [{"name": "django.request", "msg": "Not Found: /api/", "args": null, "levelname": "WARNING", "levelno": 30, "pathname": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/utils/log.py", "filename": "log.py", "module": "log", "exc_info": null, "exc_text": null, "stack_info": null, "lineno": 248, "funcName": "log_response", "created": 1750140976.917327, "msecs": 917.0, "relativeCreated": 135185.61674, "thread": 140661530359616, "threadName": "MainThread", "processName": "MainProcess", "process": 40246, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/'>"}]}, "teardown": {"duration": 0.0003055130073335022, "outcome": "passed"}}, {"nodeid": "tests/test_setup.py::TestSetupVerification::test_database_connection", "lineno": 21, "outcome": "passed", "keywords": ["test_database_connection", "TestSetupVerification", "test_setup.py", "tests", "sumy", ""], "setup": {"duration": 0.0008112539944704622, "outcome": "passed"}, "call": {"duration": 0.16256548499222845, "outcome": "passed"}, "teardown": {"duration": 0.0002739909978117794, "outcome": "passed"}}, {"nodeid": "tests/test_setup.py::TestSetupVerification::test_factory_creation", "lineno": 26, "outcome": "passed", "keywords": ["test_factory_creation", "TestSetupVerification", "test_setup.py", "tests", "sumy", ""], "setup": {"duration": 0.0007894329901318997, "outcome": "passed"}, "call": {"duration": 0.31706141398171894, "outcome": "passed"}, "teardown": {"duration": 0.0009221869986504316, "outcome": "passed", "stdout": "\nTestSetupVerification completed in 0.67s\n"}}, {"nodeid": "tests/test_setup.py::test_pytest_works", "lineno": 42, "outcome": "passed", "keywords": ["test_pytest_works", "django_db", "pytestmark", "test_setup.py", "tests", "sumy", ""], "setup": {"duration": 0.005937350011663511, "outcome": "passed"}, "call": {"duration": 0.1509179300046526, "outcome": "passed"}, "teardown": {"duration": 0.0016133860044647008, "outcome": "passed"}}, {"nodeid": "tests/test_setup.py::test_imports", "lineno": 52, "outcome": "passed", "keywords": ["test_imports", "test_setup.py", "tests", "sumy", ""], "setup": {"duration": 0.0008884079870767891, "outcome": "passed"}, "call": {"duration": 0.00019860800239257514, "outcome": "passed"}, "teardown": {"duration": 0.0068686169979628175, "outcome": "passed"}}], "warnings": [{"message": "DateTimeField Thread.created_date received a naive datetime (2025-06-15 00:00:00) while time zone support is active.", "category": "RuntimeWarning", "when": "runtest", "filename": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/db/models/fields/__init__.py", "lineno": 1606}, {"message": "DateTimeField Thread.created_date received a naive datetime (2025-06-17 00:00:00) while time zone support is active.", "category": "RuntimeWarning", "when": "runtest", "filename": "/mnt/c/repos/sumy/.venv/lib/python3.13/site-packages/django/db/models/fields/__init__.py", "lineno": 1606}]}